using UnityEngine;
using System.Collections;

public class ShipInvulnerability : MonoBehaviour
{
    [Header("Invulnerabilidad")]
    [SerializeField] private float tiempoInvulnerabilidad = 3f;  // Tiempo total de invulnerabilidad
    [SerializeField] private float tiempoParpadeo = 0.1f;  // Tiempo entre parpadeos
    [SerializeField] private GameObject shipVisual;  // Ahora hacemos parpadear el objeto visual (el hijo)

    private bool invulnerable = false;

    private void Start()
    {
        if (shipVisual == null)
        {
            Debug.LogError("⚠️ No se asignó el shipVisual en el inspector.");
        }
    }

    public void ActivarInvulnerabilidad()
    {
        if (!invulnerable)
        {
            StartCoroutine(InvulnerabilidadCoroutine());
        }
    }

    private IEnumerator InvulnerabilidadCoroutine()
    {
        invulnerable = true;
        float tiempoRestante = tiempoInvulnerabilidad;

        while (tiempoRestante > 0)
        {
            if (shipVisual != null)
                shipVisual.SetActive(!shipVisual.activeSelf); // Hacemos que aparezca y desaparezca

            yield return new WaitForSeconds(tiempoParpadeo);
            tiempoRestante -= tiempoParpadeo;
        }

        // Al final aseguramos que esté visible
        if (shipVisual != null)
            shipVisual.SetActive(true);

        invulnerable = false;
    }
}
